{"version":3,"sources":["components/08-useReducer/todoReducer.js","components/08-useReducer/TodoListItem.js","components/08-useReducer/TodoList.js","components/08-useReducer/TodoAdd.js","hooks/useForm.js","components/08-useReducer/TodoApp.js","index.js"],"names":["todoReducer","state","action","type","payload","filter","todo","id","map","done","TodoListItem","index","handleDelete","handleToggle","className","onClick","desc","propTyper","PropTypes","number","isRequired","array","func","TodoList","todos","i","TodoAdd","handleAddTodo","initialState","useState","values","setValues","target","name","value","useForm","description","handleInputChange","reset","onSubmit","evento","preventDefault","trim","length","newTodo","Date","getTime","placeholder","autoComplete","onChange","init","JSON","parse","localStorage","getItem","TodoApp","useReducer","dispatch","useEffect","setItem","stringify","todoId","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"iMAAaA,EAAY,WAAoB,IAAnBC,EAAkB,uDAAZ,GAAGC,EAAS,uCACxC,OAAQA,EAAOC,MACX,IAAK,MACD,MAAM,GAAN,mBAAWF,GAAX,CAAiBC,EAAOE,UAC5B,IAAK,SACD,OAAOH,EAAMI,QAAO,SAAAC,GAAI,OAAEA,EAAKC,KAAOL,EAAOE,WACjD,IAAK,SACD,OAAOH,EAAMO,KAAI,SAAAF,GACb,OAAGA,EAAKC,KAAKL,EAAOE,QACT,2BACAE,GADP,IAEIG,MAAOH,EAAKG,OAGTH,KAGnB,QACI,OAAOL,I,uBCfNS,EAAe,SAAC,GAA4C,IAA3CC,EAA0C,EAA1CA,MAAML,EAAoC,EAApCA,KAAKM,EAA+B,EAA/BA,aAAaC,EAAkB,EAAlBA,aAClD,OACI,qBACIC,UAAU,kBADd,UAGI,oBACIA,UAAS,UAAMR,EAAKG,MAAQ,YAC5BM,QAAS,WAAKF,EAAaP,EAAKC,KAFpC,UAIKI,EAAM,EAJX,KAIgBL,EAAKU,QAErB,wBACIF,UAAU,iBACVC,QAAS,WAAKH,EAAaN,EAAKC,KAFpC,wBAUZG,EAAaO,UAAU,CACnBN,MAAOO,IAAUC,OAAOC,WACxBd,KAAMY,IAAUG,MAAMD,WACtBR,aAAcM,IAAUI,KAAKF,WAC7BP,aAAcK,IAAUI,KAAKF,YCvB1B,IAAMG,EAAW,SAAC,GAAuC,IAAtCC,EAAqC,EAArCA,MAAMZ,EAA+B,EAA/BA,aAAaC,EAAkB,EAAlBA,aACzC,OACI,oBAAIC,UAAU,8BAAd,SAEQU,EAAMhB,KAAK,SAACF,EAAKmB,GACb,OACI,cAAC,EAAD,CAEId,MAAOc,EACPnB,KAAMA,EACNM,aAAcA,EACdC,aAAcA,GAJTP,EAAKC,U,eCTzBmB,EAAU,SAAC,GAAqB,IAApBC,EAAmB,EAAnBA,cAAmB,ECDrB,WAAsB,IAArBC,EAAoB,uDAAP,GAAO,EACZC,mBAASD,GADG,mBACjCE,EADiC,KACzBC,EADyB,KAWxC,MAAO,CAACD,EANgB,SAAC,GAAY,IAAXE,EAAU,EAAVA,OACtBD,EAAU,2BACHD,GADE,kBAEJE,EAAOC,KAAMD,EAAOE,UANjB,WACRH,EAAUH,KDDgCO,CAAQ,CAClDC,YAAa,KAFuB,mBAChCA,EADgC,KAChCA,YAAaC,EADmB,KACDC,EADC,KAiBxC,OACI,qCACI,8CACA,uBACA,uBAAMC,SAjBK,SAACC,GAEhB,GADAA,EAAOC,mBACJL,EAAYM,OAAOC,QAAQ,GAA9B,CAGA,IAAMC,EAAQ,CACVrC,IAAI,IAAIsC,MAAOC,UACf9B,KAAMoB,EACN3B,MAAM,GAEVkB,EAAciB,GACdN,MAMI,UACI,uBACInC,KAAK,OACL8B,KAAK,cACLnB,UAAU,eACViC,YAAY,eACZC,aAAa,MACbd,MAAOE,EACPa,SAAUZ,IAEd,wBACIlC,KAAK,SACLW,UAAU,yCAFd,4BE5BVoC,EAAK,WACP,OAAOC,KAAKC,MAAMC,aAAaC,QAAQ,WAAa,IAE3CC,EAAU,WAAO,IAAD,EACAC,qBAAWxD,EAAa,GAAGkD,GAD3B,mBAClB1B,EADkB,KACZiC,EADY,KAGzBC,qBAAU,WACNL,aAAaM,QAAQ,QAAQR,KAAKS,UAAUpC,MAC7C,CAACA,IA0BJ,OACI,gCACG,6CAAgBA,EAAMmB,OAAtB,QACA,uBACA,sBAAK7B,UAAU,MAAf,UACI,qBAAKA,UAAU,QAAf,SACI,cAAC,EAAD,CACKU,MAAOA,EACPZ,aAhCD,SAACiD,GAKhBJ,EAJa,CACTtD,KAAM,SACNC,QAASyD,KA8BGhD,aAzBD,SAACgD,GAKhBJ,EAJa,CACTtD,KAAM,SACNC,QAASyD,SAyBN,qBAAK/C,UAAU,QAAf,SACK,cAAC,EAAD,CACIa,cAtBA,SAACiB,GAKjBa,EAJa,CACTtD,KAAM,MACNC,QAASwC,gBCnBrBkB,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,W","file":"static/js/main.d46c77ad.chunk.js","sourcesContent":["export const todoReducer=(state=[],action)=>{\n    switch (action.type) {\n        case 'add':            \n            return [...state,action.payload];\n        case 'delete':\n            return state.filter(todo=>todo.id !== action.payload);\n        case 'toggle':\n            return state.map(todo=>{\n                if(todo.id===action.payload){\n                    return {\n                        ...todo,\n                        done: !todo.done\n                    }\n                }else{\n                    return todo;\n                }\n            });\n        default:\n            return state;\n    }\n}","import React from 'react';\nimport PropTypes from 'prop-types';\n\nexport const TodoListItem = ({index,todo,handleDelete,handleToggle}) => {\n    return (\n        <li            \n            className=\"list-group-item\"\n        >\n            <p \n                className={`${ todo.done && 'complete'}`}\n                onClick={()=>{handleToggle(todo.id)}}\n            >\n                {index+1}. {todo.desc}\n            </p> \n            <button\n                className=\"btn btn-danger\"\n                onClick={()=>{handleDelete(todo.id);}}\n            >\n                Borrar\n            </button>                                   \n        </li>\n    )\n}\n\nTodoListItem.propTyper={\n    index: PropTypes.number.isRequired,\n    todo: PropTypes.array.isRequired,\n    handleDelete: PropTypes.func.isRequired,\n    handleToggle: PropTypes.func.isRequired\n}","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { TodoListItem } from './TodoListItem';\n\n\nexport const TodoList = ({todos,handleDelete,handleToggle}) => {\n    return (\n        <ul className=\"list-group list-group-flush\">\n            {\n                todos.map( (todo,i) =>{\n                    return (\n                        <TodoListItem\n                            key={todo.id}\n                            index={i}\n                            todo={todo}\n                            handleDelete={handleDelete}\n                            handleToggle={handleToggle}\n                        />\n                    )\n                })\n            }\n        </ul>\n    )    \n}\nTodoList.propTypes={\n    todos: PropTypes.array.isRequired,\n    handleDelete: PropTypes.func.isRequired,\n    handleToggle: PropTypes.func.isRequired\n}","import React from 'react';\nimport {useForm} from '../../hooks/useForm';\n\nexport const TodoAdd = ({handleAddTodo}) => {\n    const [{description},handleInputChange,reset]=useForm({\n        description: ''\n    });\n    const handleSubmit=(evento)=>{\n        evento.preventDefault();\n        if(description.trim().length<=1){\n            return;\n        }\n        const newTodo={\n            id: new Date().getTime(),\n            desc: description,\n            done: false\n        };        \n        handleAddTodo(newTodo);\n        reset();\n    }\n    return (\n        <>\n            <h4>Agregar TODO</h4>\n            <hr />\n            <form onSubmit={handleSubmit}>\n                <input\n                    type=\"text\"\n                    name=\"description\"\n                    className=\"form-control\"\n                    placeholder=\"Aprender ...\"\n                    autoComplete=\"off\"\n                    value={description}\n                    onChange={handleInputChange}\n                />\n                <button\n                    type=\"submit\"\n                    className=\"btn btn-outline-primary mt-1 btn-block\"\n                >\n                    Agregar\n                </button>\n            </form>\n        </>\n    )\n}\n","import { useState } from \"react\";\n\nexport const useForm = (initialState={}) => {\n    const [values, setValues] = useState(initialState);\n    const reset=()=>{\n        setValues(initialState);\n    }\n    const handleInputChange=({target})=>{\n        setValues({\n            ...values,\n            [target.name]:target.value\n        });\n    }\n    return [values,handleInputChange,reset];\n}\n","import React, { useEffect, useReducer } from 'react';\nimport { todoReducer } from './todoReducer';\nimport { TodoList } from './TodoList';\nimport './styles.css';\nimport { TodoAdd } from './TodoAdd';\n\nconst init=()=>{\n    return JSON.parse(localStorage.getItem('todos')) || [];\n}\nexport const TodoApp = () => {\n    const [todos,dispatch] = useReducer(todoReducer, [],init);\n    \n    useEffect(() => {\n        localStorage.setItem('todos',JSON.stringify(todos));           \n    }, [todos]);\n    \n    const handleDelete=(todoId)=>{        \n        const action={\n            type: 'delete',\n            payload: todoId\n        };\n        dispatch(action);\n    }\n\n    const handleToggle=(todoId)=>{\n        const action={\n            type: 'toggle',\n            payload: todoId\n        };\n        dispatch(action);\n    }\n\n    const handleAddTodo=(newTodo)=>{\n        const action={\n            type: 'add',\n            payload: newTodo\n        };\n        dispatch(action);\n    }\n    \n    return (\n        <div>\n           <h1>Todo App ( {todos.length} )</h1> \n           <hr />\n           <div className=\"row\">\n               <div className=\"col-7\">\n                   <TodoList \n                        todos={todos}\n                        handleDelete={handleDelete}\n                        handleToggle={handleToggle}\n                   />                    \n               </div>\n               <div className=\"col-5\">\n                    <TodoAdd\n                        handleAddTodo={handleAddTodo}\n                    />\n               </div>\n           </div>\n           \n        </div>\n    )\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\n// import {HookApp} from './HookApp';\n// import {CounterApp} from './components/01-useState/CounterApp';\n// import { CounterWithCustomHook } from './components/01-useState/CounterWithCustomHook';\n// import {SimpleForm} from './components/02-useEffect/SimpleForm';\n// import {FormWithCustomHook} from './components/02-useEffect/FormWithCustomHook';\n// import {MultipleCustomHook} from './components/03-examples/MultipleCustomHook';\n// import { FocusScreen } from './components/04-useRef/FocusScreen';\n// import { RealExampleRef } from './components/04-useRef/RealExampleRef';\n// import { Layout } from './components/05-useLayoutEffect/Layout';\n// import { Memorize } from './components/06-memos/Memorize';\n// import { MemoHook } from './components/06-memos/MenoHook';\n// import { CallbackHook } from './components/06-memos/CallbackHook';\n// import { Padre } from './components/07-tarea-memo/Padre';\nimport { TodoApp } from './components/08-useReducer/TodoApp';\nReactDOM.render(\n  <React.StrictMode>\n    <TodoApp />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\n\n"],"sourceRoot":""}